static_resources:
  listeners:
  - name: main
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: auto
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains:
              - "*"
              # Plugin config here applies to the VirtualHost
              #
              # typed_per_filter_config:
              #   proxy.filters.http.rider:
              #     "@type": type.googleapis.com/proxy.filters.http.rider.v3alpha1.RouteFilterConfig
              #     plugins:
              routes:
              - match:
                  prefix: "/static-to-header"
                route: 
                  cluster: web_service
                metadata:
                  filter_metadata:
                    proxy.filters.http.rider:
                      api_id: 11111
                      svc_id: "svc_id_test"
                # Plugin config here applies to the Route 
                #
                # plugins is a list of plugin route configs. Each entry has a name and its config.
                # The filter will look up the list by order given a plugin name, and use the first match entry.
                typed_per_filter_config:
                  proxy.filters.http.rider:
                    "@type": type.googleapis.com/proxy.filters.http.rider.v3alpha1.RouteFilterConfig
                    plugins:
                      - name: echo
                        config:
                          message: "Lua is awesome!"
                          source: Static
                          destination: Header
                          header_name: x-echo-foo
              - match:
                  prefix: "/external-to-body"
                route: 
                  cluster: web_service
                typed_per_filter_config:
                  proxy.filters.http.rider:
                    "@type": type.googleapis.com/proxy.filters.http.rider.v3alpha1.RouteFilterConfig
                    plugins:
                      - name: echo
                        config:
                          external_service: example_service
                          external_service_authority: example.com
                          source: External
                          destination: Body
              - match:
                  prefix: "/body-to-body"
                route: 
                  cluster: web_service
                typed_per_filter_config:
                  proxy.filters.http.rider:
                    "@type": type.googleapis.com/proxy.filters.http.rider.v3alpha1.RouteFilterConfig
                    plugins:
                      - name: echo
                        config:
                          source: Body
                          destination: Body
              - match:
                  prefix: "/"
                route: 
                  cluster: web_service
          http_filters:
          - name: proxy.filters.http.rider
            typed_config:
              "@type": type.googleapis.com/proxy.filters.http.rider.v3alpha1.FilterConfig
              plugin:
                vm_config:
                  package_path: "/home/starrynight/workspace/rider/?/init.lua;/home/starrynight/workspace/rider/?.lua;"
                code:
                  local:
                    filename: /home/starrynight/workspace/rider/plugins/echo/echo.lua
                name: echo
                config:
                  message: "C++ is awesome!"
                  source: Static
                  destination: Body
          - name: envoy.router
            typed_config: {}

  clusters:
  - name: web_service
    connect_timeout: 1s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: web_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: httpbin.org
                port_value: 80
  - name: example_service
    connect_timeout: 1s
    type: strict_dns
    lb_policy: round_robin
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: example_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: example.com
                port_value: 80
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
